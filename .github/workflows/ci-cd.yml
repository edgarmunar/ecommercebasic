name: CI/CD Pipeline for E-commerce Basic  #Nombre del flujo

on: # Se define los eventos del flujo de tranajo
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest  #identifica que se va a trabajar en Ubuntu

    steps:
      - name: Checkout Code #clona el repositorio en el entorno
        uses: actions/checkout@v3

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17' #Version de Java del proyecto

      - name: Build Project  
        run: ./mvnw clean install #Construye el proyecto

      - name: Run Tests
        run: ./mvnw tes #Corre el test del proyecto

  deploy:
    runs-on: ubuntu-latest   #Ejecuta
    needs: build-and-test  # Necesita que este correcto la construccion del proyecto
    if: github.ref == 'refs/heads/main'   #Se ejecuta solo en la rama especificada = main
    
    steps:
      - name: Checkout Code   #clona el repositorio en el entorno
        uses: actions/checkout@v3

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'  #Version de Java del proyecto

      - name: Build Project
        run: ./mvnw clean install #Construye el proyecto

        - name: Deploy to Staging Server
        env:
          DEPLOYMENT_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }} #este token es el que tengo creado en github
          SERVER_USER: ${{ secrets.SERVER_USER }}   #usurio del servidor donde se va  desplegar
          SERVER_HOST: ${{ secrets.SERVER_HOST }}    #direccion del servidor, este ejemplo es con una conexion SSH
        run: 
          #Esto seria un ejemplo de los comandos dentro del servidor de despliegue
          # Add the SSH key to the SSH agent
          mkdir -p ~/.ssh
          echo "$DEPLOYMENT_TOKEN" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Deploy commands
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
            cd /path/to/deployment/directory
            rm -f application.jar
            scp user@local:/path/to/build/application.jar .
            nohup java -jar application.jar > application.log 2>&1 &
          EOF
